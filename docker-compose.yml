services:
  postgres:
    image: postgres:15-alpine
    container_name: ${COMPOSE_PROJECT_NAME:-api-premium-gateway}-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-api_gateway}
      POSTGRES_USER: ${DB_USER:-gateway_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-gateway_pass}
      POSTGRES_INITDB_ARGS: "${POSTGRES_INITDB_ARGS:---encoding=UTF8 --locale=C}"
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docs/sql:/docker-entrypoint-initdb.d:ro
    networks:
      - ${NETWORK_NAME:-gateway-network}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-gateway_user} -d ${DB_NAME:-api_gateway}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # API Gateway应用服务
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME:-api-premium-gateway}-app
    environment:
      # Spring配置
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-docker}
      SPRING_DATASOURCE_URL: jdbc:postgresql://${DB_HOST:-postgres}:${DB_PORT:-5432}/${DB_NAME:-api_gateway}?useUnicode=true&characterEncoding=UTF-8&useSSL=false&stringtype=unspecified&assumeMinServerVersion=9.6&prepareThreshold=0&DateStyle=ISO
      SPRING_DATASOURCE_USERNAME: ${DB_USER:-gateway_user}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD:-gateway_pass}
      # JVM配置
      JAVA_OPTS: "${JAVA_OPTS:--Xms512m -Xmx1024m -Djava.security.egd=file:/dev/./urandom}"
    ports:
      - "${GATEWAY_PORT:-8081}:8081"
    volumes:
      - app_logs:/app/logs
    networks:
      - ${NETWORK_NAME:-gateway-network}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
    driver: local
  app_logs:
    driver: local

networks:
  gateway-network:
    driver: bridge
    name: ${NETWORK_NAME:-gateway-network}
